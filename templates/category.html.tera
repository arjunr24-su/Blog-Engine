<!DOCTYPE html>
<html lang="en" data-bs-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/static/node_modules/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
    <title>{{ title }}</title>
    <style>
        /* General Body Styles */
        body {
            background-color: #f4f4f4;
            color: #333;
            transition: background-color 0.3s, color 0.3s;
        }

        /* Navbar Styles */
        .navbar {
            background-color: rgba(255, 255, 255, 0.9);
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            border-radius: 0 0 10px 10px;
            padding: 15px 20px;
            transition: background-color 0.3s ease;
        }

        .navbar-brand {
            font-size: 1.75rem;
            font-weight: bold;
            color: #35424a;
            transition: color 0.3s ease;
        }

        .navbar-brand:hover {
            color: #007bff;
        }

        .navbar-nav .nav-link {
            font-weight: 500;
            margin-left: 10px;
            transition: color 0.3s ease;
        }

        .navbar-nav .nav-link:hover {
            color: #007bff;
        }

        /* Dark Mode Styles */
        body.bg-dark {
            background-color: #1c1c1c !important;
            color: #f8f9fa !important;
        }

        body.bg-dark .navbar {
            background-color: rgba(0, 0, 0, 0.85) !important;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);
        }

        body.bg-dark .navbar-brand,
        body.bg-dark .nav-link {
            color: #f8f9fa !important;
        }

        body.bg-dark .nav-link:hover {
            color: #3498db !important;
        }

        body.bg-dark .card {
            background-color: #2d2d2d;
            border-color: #444;
        }

        body.bg-dark .card-title a {
            color: #f8f9fa;
        }

        body.bg-dark .card-text {
            color: #d1d1d1;
        }

        /* Filter Controls */
        .filter-controls {
            background-color: rgba(255, 255, 255, 0.9);
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
            transition: background-color 0.3s ease;
        }

        body.bg-dark .filter-controls {
            background-color: rgba(45, 45, 45, 0.9);
        }

        /* Article Cards */
        .card {
            transition: transform 0.2s, box-shadow 0.2s;
            border-radius: 8px;
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .tag-badge {
            font-size: 0.8rem;
            margin-right: 5px;
            margin-bottom: 5px;
            display: inline-block;
        }

        /* Footer */
        footer {
            text-align: center;
            padding: 15px 0;
            background-color: #35424a;
            color: #ffffff;
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            h1 {
                font-size: 2rem;
            }

            .navbar {
                padding: 10px;
            }

            .filter-controls .row {
                flex-direction: column;
            }

            .filter-controls .col-md-4 {
                margin-bottom: 15px;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="/">Blog</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="/">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/posts">All Posts</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/category/tech">Tech</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/category/security">Security</a>
                </li>
                <li class="nav-item">
                            <a class="nav-link" href="/category/Lifestyle">Lifestyle</a>
                        </li><li class="nav-item"><a class="nav-link" href="/category/News">News</a></li>
            </ul>
            <button id="theme-toggle" class="btn btn-secondary ms-auto">Toggle Dark Mode</button>
        </div>
    </nav>

    <div class="container mt-4">
        <!-- Category Header -->
        <div class="mb-4">
            <h1>{{ title }}</h1>
            {% if category_description %}
            <p class="lead">{{ category_description }}</p>
            {% endif %}
        </div>

        <!-- Filter Controls -->
        <div class="filter-controls shadow-sm">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <label for="source-filter" class="form-label">Source</label>
                    <select id="source-filter" class="form-select">
                        <option value="all">All Sources</option>
                        <option value="Dev.to">Dev.to</option>
                        <option value="Hacker News">Hacker News</option>
                        <option value="Medium">Medium</option>
                        <option value="TechCrunch">TechCrunch</option>
                        <option value="The Guardian">The Guardian</option>
                        <option value="Mashable">Mashable</option>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <label for="sort-order" class="form-label">Sort By</label>
                    <select id="sort-order" class="form-select">
                        <option value="newest">Newest First</option>
                        <option value="oldest">Oldest First</option>
                        <option value="title">Title (A-Z)</option>
                        <option value="source">Source</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Articles Grid -->
        <div class="row" id="articles-grid">
            {% if articles|length == 0 %}
                <div class="col-12">
                    <div class="alert alert-info">No articles found in this category.</div>
                </div>
            {% else %}
                {% for source, items in articles | group_by(attribute="tags[0]") %}
                <div class="source-group" data-source="{{ source }}">
                    <h2 class="h4 mb-3">{{ source }}</h2>
                    {% for article in items %}
                    <div class="col-md-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <h5 class="card-title">
                                    <a href="{{ article.url }}" class="text-decoration-none">{{ article.title }}</a>
                                </h5>
                                <p class="card-text">{{ article.excerpt | truncate(length=150) }}</p>
                                {% if article.tags %}
                                <div class="mb-3">
                                    {% for tag in article.tags %}
                                    <span class="badge bg-secondary tag-badge">{{ tag }}</span>
                                    {% endfor %}
                                </div>
                                {% endif %}
                                <a href="{{ article.url }}" class="btn btn-primary">Read more</a>
                            </div>
                        </div>
                    </div>
                    {% endfor %}
                </div>
                {% endfor %}
            {% endif %}
        </div>

        <!-- Pagination -->
        {% if pagination %}
        <nav aria-label="Page navigation" class="mt-4 mb-5">
            <ul class="pagination justify-content-center">
                {% if pagination.has_previous %}
                <li class="page-item">
                    <a class="page-link" href="{{ pagination.previous_page_url }}">Previous</a>
                </li>
                {% endif %}

                {% for page in pagination.pages %}
                <li class="page-item {% if page == pagination.current_page %}active{% endif %}">
                    <a class="page-link" href="{{ page.url }}">{{ page.number }}</a>
                </li>
                {% endfor %}

                {% if pagination.has_next %}
                <li class="page-item">
                    <a class="page-link" href="{{ pagination.next_page_url }}">Next</a>
                </li>
                {% endif %}
            </ul>
        </nav>
        {% endif %}
    </div>

    <footer>
        <p>&copy; 2024 Blog Engine</p>
    </footer>

    <!-- Scripts -->
    <script src="/static/node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Theme Toggle
            const toggleButton = document.getElementById('theme-toggle');
            const currentTheme = localStorage.getItem('theme');

            // Apply saved theme
            if (currentTheme === 'dark') {
                document.body.classList.add('bg-dark');
                toggleButton.textContent = 'Toggle Light Mode';
            }

            toggleButton.addEventListener('click', () => {
                document.body.classList.toggle('bg-dark');
                const isDarkMode = document.body.classList.contains('bg-dark');
                localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');
                toggleButton.textContent = isDarkMode ? 'Toggle Light Mode' : 'Toggle Dark Mode';
            });

            // Filtering and Sorting
            const sourceFilter = document.getElementById('source-filter');
            const sortOrder = document.getElementById('sort-order');
            const articlesGrid = document.getElementById('articles-grid');

            // Filter by source
            sourceFilter.addEventListener('change', function() {
                const selectedSource = this.value;
                const sourceGroups = document.querySelectorAll('.source-group');

                sourceGroups.forEach(group => {
                    if (selectedSource === 'all' || group.dataset.source === selectedSource) {
                        group.style.display = 'block';
                    } else {
                        group.style.display = 'none';
                    }
                });
            });

            // Sort articles
            sortOrder.addEventListener('change', function() {
                const sourceGroups = Array.from(document.querySelectorAll('.source-group'));
                const sortType = this.value;

                sourceGroups.sort((a, b) => {
                    switch(sortType) {
                        case 'newest':
                            return new Date(b.dataset.date) - new Date(a.dataset.date);
                        case 'oldest':
                            return new Date(a.dataset.date) - new Date(b.dataset.date);
                        case 'source':
                            return a.dataset.source.localeCompare(b.dataset.source);
                        case 'title':
                            const titleA = a.querySelector('h5').textContent.trim();
                            const titleB = b.querySelector('h5').textContent.trim();
                            return titleA.localeCompare(titleB);
                        default:
                            return 0;
                    }
                });

                // Re-append sorted elements
                sourceGroups.forEach(group => {
                    articlesGrid.appendChild(group);
                });
            });
        });
    </script>
</body>
</html>